#!/bin/bash

declare -r PROGNAME=$(basename $0)
HINTDIR=$HOME                       # change this as needed
HINTFILE="hints.txt"                # change this as needed

function helptext() {
cat <<EOF
   ------------------------------------------------------------------

   Shell program to search a hints file.

       This program is designed to be a quick reference if you need
       to know something quickly. I use it as a reminder for syntax
       of commands that I use infrequently.

       (If you have grep colorized, your 'hint' output will be too.)

   Usage:

       ${PROGNAME} [--help] SEARCHTERM

       (Preface SEARCHTERM with a ^ to only search start-of-lines.)

   External programs req'd:
       bash, basename, grep (all standard)
   Revision History: see git log

   ------------------------------------------------------------------
EOF
}   # end of helptext


function usage() {
cat <<EOF
    Usage: ${PROGNAME} [--help] [SearchTerm]"
EOF
} # end of usage



#   ------------------------------------------------------------------
#   Program starts here
#   ------------------------------------------------------------------

##### Command Line Processing #####

# If there are no arguments...
if [ $# -eq 0 ]; then
  usage
  exit 1
fi

# simple command line parsing
if [ "$1" = "--help" ]; then
  helptext
  exit
fi

##### Main Logic #####

if (grep -iq $@ $HINTDIR/$HINTFILE) then
  echo
  # ignore lines beginning with 5 slashes and search the remaining lines for
  # the search term (grep out the comments first so searchterm gets
  # highlighted):
  grep -v '^/////' $HINTDIR/$HINTFILE | grep -i $@
  echo
else
  echo
  echo "Sorry. \"$@\" is not found in $HINTDIR/$HINTFILE"
  echo
fi

exit

# end of script

